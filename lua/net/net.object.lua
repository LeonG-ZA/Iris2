-- packet handlers for receiving creating and updating game-objects (dynamics, statics, multis...)
-- see also lib.packet.lua and lib.protocol.lua

function Send_DoubleClick (iSerial)
	if (gbDisableDoubleClick) then return end
	if (not iSerial) then return end
	--print("Send_DoubleClick",sprintf("0x%08x",iSerial),GetOneLineBackTrace(2))
	printdebug("net",sprintf("NET: Send_DoubleClick: 0x%08x\n",iSerial))
	local out = GetSendFIFO()
	out:PushNetUint8(kPacket_Double_Click)
	out:PushNetUint32(iSerial)
	out:SendPacket()
	
	gLastDoubleClickSerial = iSerial
end

function RepeatLastDoubleClick ()
	if gLastDoubleClickSerial ~= 0 then
		Send_DoubleClick(gLastDoubleClickSerial)
	end
end

gAutoGeneratedSingleClicks = {}
function Send_SingleClick (iSerial,bAutoGenerated)
	if (gbDisableSingleClick) then return end
	printdebug("net",sprintf("NET: Send_SingleClick: 0x%08x\n",iSerial))
	local out = GetSendFIFO()
	out:PushNetUint8(kPacket_Single_Click)
	out:PushNetUint32(iSerial)
	out:SendPacket()
	NotifyListener("Hook_SingleClick",iSerial)
	if (bAutoGenerated) then
		gAutoGeneratedSingleClicks[iSerial] = true
	else
		gAutoGeneratedSingleClicks[iSerial] = nil
	end
end

-- Server sends Delete/Destroy command of char/item (usually during drag&drop from container)
-- TODO : multis (serverside multis)
--		  destroy statics?, containers ?? (associated dialogs,widgets..)
--		 (NOT here, statics are dynamicly loaded and containers should be cached or destroyed when closed
function gPacketHandler.kPacket_Destroy()
	local input = GetRecvFIFO()
	local id = input:PopNetUint8()
	local serial = input:PopNetUint32()
	printdebug("net",sprintf("NET: Destroy item with serial: 0x%08x\n",serial))

	DestroyObjectBySerial(serial)
	NotifyListener("Hook_Packet_Destroy",serial)
end

